
{
  "apiVersion": "2.0",
  "swaggerVersion": "1.2",
  "basePath": "http://test-ods-v2.5.0.1.example.com/api/v2.0/2019",
  "resourcePath": "/graduationPlans",
  "produces": [
    "application/json"
  ],
  "apis": [
    {
      "path": "/graduationPlans",
      "description": "This entity is a plan outlining the required credits, credits by subject,credits by course, and other criteria required for graduation. A graduation plan may be one or more standard plans defined by an education organization and/or individual plans for some or all students.",
      "operations": [
        {
          "method": "GET",
          "nickname": "getGraduationPlansAll",
          "type": "array",
          "items": {
            "$ref": "graduationPlan"
          },
          "parameters": [
            {
              "paramType": "query",
              "name": "offset",
              "description": "Indicates how many items should be skipped before returning results.",
              "type": "integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "limit",
              "description": "Indicates the maximum number of items that should be returned in the results (defaults to 25).",
              "type": "integer",
              "required": false,
              "minimum": 1,
              "maximum": 250
            }
          ],
          "produces": [
            "application/json"
          ],
          "summary": "Retrieves resources based with paging capabilities (using the \"Get All\" pattern).",
          "notes": "This GET operation provides access to resources using the \"Get All\" pattern. In this version of the API there is support for paging.",
          "responseMessages": [
            {
              "code": 200,
              "message": "The matching resource(s) were successfully retrieved.  If no instances are found will return an empty collection.",
              "responseModel": "array",
              "items": {
                "$ref": "graduationPlan"
              }
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors.  This will typically be an issue with the query parameters or their values."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        },
        {
          "method": "GET",
          "nickname": "getGraduationPlansByExample",
          "type": "array",
          "items": {
            "$ref": "graduationPlan"
          },
          "parameters": [
            {
              "paramType": "query",
              "name": "offset",
              "description": "Indicates how many items should be skipped before returning results.",
              "type": "integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "limit",
              "description": "Indicates the maximum number of items that should be returned in the results (defaults to 25).",
              "type": "integer",
              "required": false,
              "minimum": 1,
              "maximum": 250
            },
            {
              "paramType": "query",
              "name": "typeDescriptor",
              "description": "The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.",
              "type": "string",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "educationOrganizationId",
              "description": "The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.",
              "type": "integer",
              "format": "int32",
              "required": false
            },
            {
              "paramType": "query",
              "name": "graduationSchoolYear",
              "description": "The school year the student is expected to graduate.",
              "type": "integer",
              "format": "int32",
              "required": false
            },
            {
              "paramType": "query",
              "name": "totalRequiredCreditType",
              "description": "The type of credits or units of value awarded for the completion of a course.",
              "type": "string",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "individualPlan",
              "description": "An indicator of whether the GraduationPlan is tailored for an individual.",
              "type": "boolean",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "totalRequiredCredits",
              "description": "The value of credits or units of value awarded for the completion of a course.",
              "type": "number",
              "format": "double",
              "required": false
            },
            {
              "paramType": "query",
              "name": "totalRequiredCreditConversion",
              "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
              "type": "number",
              "format": "double",
              "required": false
            },
            {
              "paramType": "query",
              "name": "id",
              "description": "",
              "type": "string",
              "format": "string",
              "required": false
            }
          ],
          "produces": [
            "application/json"
          ],
          "summary": "Retrieves resources matching values of an example resource (using the \"Get By Example\" pattern).",
          "notes": "This GET operation provides access to resources using the \"Get by Example\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
          "responseMessages": [
            {
              "code": 200,
              "message": "The resource(s) were successfully retrieved.  If no instances are found will return an empty collection.",
              "responseModel": "array",
              "items": {
                "$ref": "graduationPlan"
              }
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors.  This will typically be an issue with the query parameters or their values."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        },
        {
          "method": "GET",
          "nickname": "getGraduationPlanByKey",
          "type": "graduationPlan",
          "parameters": [
            {
              "paramType": "query",
              "name": "educationOrganizationId",
              "description": "The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.",
              "type": "integer",
              "format": "int32",
              "required": true
            },
            {
              "paramType": "query",
              "name": "typeDescriptor",
              "description": "The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard.",
              "type": "string",
              "format": "",
              "required": true
            },
            {
              "paramType": "query",
              "name": "graduationSchoolYear",
              "description": "The school year the student is expected to graduate.",
              "type": "integer",
              "format": "int32",
              "required": true
            },
            {
              "paramType": "header",
              "name": "If-None-Match",
              "description": "The previously returned ETag header value, used here to prevent the unnecessary data transfer of an unchanged resource.",
              "type": "string",
              "required": false
            }
          ],
          "produces": [
            "application/json"
          ],
          "summary": "Retrieves a specific resource using the values of the resource's natural key (using the \"Get By Key\" pattern).",
          "notes": "This GET operation provides access to resources using the \"Get by Key\" search pattern. The values of the natural key of the resource must be fully specified, and the service will return the matching result (if it exists).",
          "responseMessages": [
            {
              "code": 200,
              "message": "The resource was successfully retrieved.",
              "responseModel": "graduationPlan"
            },
            {
              "code": 304,
              "message": "The resource's current server-side ETag value matched the If-None-Match header value supplied with the request indicating the resource has not been modified."
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 404,
              "message": "The resource could not be found."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        },
        {
          "method": "POST",
          "nickname": "postGraduationPlans",
          "type": "void",
          "parameters": [
            {
              "paramType": "body",
              "name": "graduationPlan",
              "description": "The JSON representation of the \"graduationPlan\" resource to be created or updated.",
              "type": "graduationPlan",
              "required": true
            }
          ],
          "consumes": [
            "application/json"
          ],
          "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
          "notes": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update).  Clients should NOT include the resource \"id\" in the JSON body because it will result in an error (you must use a PUT operation to update a resource by \"id\"). The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately.",
          "responseMessages": [
            {
              "code": 201,
              "message": "The resource was created.  An ETag value is available in the ETag header, and the location of the resource is available in the Location header of the response."
            },
            {
              "code": 202,
              "message": "The resource has been validated and accepted by the service, but processing has not yet completed due to current system load. Processing may still fail due to violation of referential integrity requirements."
            },
            {
              "code": 204,
              "message": "The resource was updated.  An updated ETag value is available in the ETag header of the response."
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 409,
              "message": "Conflict.  The request cannot be completed because it would result in an invalid state.  See the response body for details."
            },
            {
              "code": 412,
              "message": "The resource's current server-side ETag value does not match the supplied If-Match header value in the request.  This indicates the resource has been modified by another consumer."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        }
      ]
    },
    {
      "path": "/graduationPlans/{id}",
      "description": "This entity is a plan outlining the required credits, credits by subject,credits by course, and other criteria required for graduation. A graduation plan may be one or more standard plans defined by an education organization and/or individual plans for some or all students.",
      "operations": [
        {
          "method": "GET",
          "nickname": "getGraduationPlansById",
          "type": "graduationPlan",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "A resource identifier specifying the resource to be retrieved.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "header",
              "name": "If-None-Match",
              "description": "The previously returned ETag header value, used here to prevent the unnecessary data transfer of an unchanged resource.",
              "type": "string",
              "required": false
            }
          ],
          "produces": [
            "application/json"
          ],
          "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
          "notes": "This GET operation retrieves a resource by the specified resource identifier.",
          "responseMessages": [
            {
              "code": 200,
              "message": "The resource was successfully retrieved.",
              "responseModel": "graduationPlan"
            },
            {
              "code": 304,
              "message": "The resource's current server-side ETag value matched the If-None-Match header value supplied with the request indicating the resource has not been modified."
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 404,
              "message": "The resource could not be found."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        },
        {
          "method": "PUT",
          "nickname": "putGraduationPlan",
          "type": "void",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "A resource identifier specifying the resource to be updated.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "header",
              "name": "If-Match",
              "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
              "type": "string",
              "required": false
            },
            {
              "paramType": "body",
              "name": "graduationPlan",
              "description": "The JSON representation of the \"graduationPlan\" resource to be updated.",
              "type": "graduationPlan",
              "required": true
            }
          ],
          "consumes": [
            "application/json"
          ],
          "summary": "Updates or creates a resource based on the resource identifier.",
          "notes": "The PUT operation is used to update or create a resource by identifier.  If the resource doesn't exist, the resource will be created using that identifier.  Additionally, natural key values cannot be changed using this operation, and will not be modified in the database.  If the resource \"id\" is provided in the JSON body, it will be ignored as well.",
          "responseMessages": [
            {
              "code": 201,
              "message": "The resource was created.  An ETag value is available in the ETag header, and the location of the resource is available in the Location header of the response."
            },
            {
              "code": 202,
              "message": "The resource has been validated and accepted by the service, but processing has not yet completed due to current system load. Processing may still fail due to violation of referential integrity requirements."
            },
            {
              "code": 204,
              "message": "The resource was updated.  An updated ETag value is available in the ETag header of the response."
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 404,
              "message": "The resource could not be found."
            },
            {
              "code": 409,
              "message": "Conflict.  The request cannot be completed because it would result in an invalid state.  See the response body for details."
            },
            {
              "code": 412,
              "message": "The resource's current server-side ETag value does not match the supplied If-Match header value in the request.  This indicates the resource has been modified by another consumer."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        },
        {
          "method": "DELETE",
          "nickname": "deleteGraduationPlanById",
          "type": "void",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "A resource identifier specifying the resource to be deleted.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "header",
              "name": "If-Match",
              "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
              "type": "string",
              "required": false,
              "allowMultiple": false
            }
          ],
          "summary": "Deletes an existing resource using the resource identifier.",
          "notes": "The DELETE operation is used to delete an existing resource by identifier.  If the resource doesn't exist, an error will result (the resource will not be found).",
          "responseMessages": [
            {
              "code": 202,
              "message": "The request has accepted by the service, but processing has not yet completed due to current system load. Processing may still fail due to violation of referential integrity requirements."
            },
            {
              "code": 204,
              "message": "The resource was successfully deleted."
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 404,
              "message": "The resource could not be found."
            },
            {
              "code": 409,
              "message": "Conflict.  The request cannot be completed because it would result in an invalid state.  See the response body for details."
            },
            {
              "code": 412,
              "message": "The resource's current server-side ETag value does not match the supplied If-Match header value in the request.  This indicates the resource has been modified by another consumer."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        }
      ]
    }
  ],
  "models": {
    "graduationPlan": {
      "id": "graduationPlan",
      "properties": {
        "id": {
          "type": "string",
          "required": true,
          "description": "The unique identifier of the resource."
        },
        "educationOrganizationReference": {
          "type": "educationOrganizationReference",
          "required": true,
          "description": "A reference to the related EducationOrganization resource."
        },
        "graduationSchoolYearTypeReference": {
          "type": "schoolYearTypeReference",
          "required": true,
          "description": "A reference to the related SchoolYearType resource."
        },
        "typeDescriptor": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The type of academic plan the student is following for graduation: for example, Minimum, Recommended, Distinguished, or Standard."
        },
        "individualPlan": {
          "type": "boolean",
          "format": "",
          "required": false,
          "description": "An indicator of whether the GraduationPlan is tailored for an individual."
        },
        "totalRequiredCreditConversion": {
          "type": "number",
          "format": "double",
          "required": false,
          "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units."
        },
        "totalRequiredCredits": {
          "type": "number",
          "format": "double",
          "required": true,
          "description": "The value of credits or units of value awarded for the completion of a course."
        },
        "totalRequiredCreditType": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The type of credits or units of value awarded for the completion of a course."
        },
        "creditsByCourses": {
          "type": "array",
          "required": false,
          "description": "An unordered collection of graduationPlanCreditsByCourses.  The total credits required for graduation by taking a specific course, or by taking one or more from a set of courses.",
          "items": {
            "$ref": "graduationPlanCreditsByCourse"
          }
        },
        "creditsBySubjects": {
          "type": "array",
          "required": false,
          "description": "An unordered collection of graduationPlanCreditsBySubjects.  The total credits required in subject to graduate. Only those courses identified as a high school course requirement are eligible to meet subject credit requirements.",
          "items": {
            "$ref": "graduationPlanCreditsBySubject"
          }
        },
        "requiredAssessments": {
          "type": "array",
          "required": false,
          "description": "An unordered collection of graduationPlanRequiredAssessments.  The assessments and associated required score and performance level needed to satisfy graduation requirements.",
          "items": {
            "$ref": "graduationPlanRequiredAssessment"
          }
        },
        "_etag": {
          "type": "string",
          "required": false,
          "description": "A unique system-generated value that identifies the version of the resource."
        }
      }
    },
    "educationOrganizationReference": {
      "id": "educationOrganizationReference",
      "properties": {
        "educationOrganizationId": {
          "type": "integer",
          "format": "int32",
          "required": true,
          "description": "The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID."
        },
        "link": {
          "type": "link",
          "required": false,
          "description": "Represents a hyperlink to the related educationOrganization resource."
        }
      }
    },
    "schoolYearTypeReference": {
      "id": "schoolYearTypeReference",
      "properties": {
        "schoolYear": {
          "type": "integer",
          "format": "int32",
          "required": true,
          "description": "Key for School Year"
        },
        "link": {
          "type": "link",
          "required": false,
          "description": "Represents a hyperlink to the related schoolYearType resource."
        }
      }
    },
    "graduationPlanCreditsByCourse": {
      "id": "graduationPlanCreditsByCourse",
      "properties": {
        "courseSetName": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "Identifying name given to a collection of courses."
        },
        "creditType": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The type of credits or units of value awarded for the completion of a course."
        },
        "whenTakenGradeLevelDescriptor": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The grade level when the student is planned to take the course."
        },
        "credits": {
          "type": "number",
          "format": "double",
          "required": true,
          "description": "The value of credits or units of value awarded for the completion of a course."
        },
        "creditConversion": {
          "type": "number",
          "format": "double",
          "required": false,
          "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units."
        },
        "courses": {
          "type": "array",
          "required": true,
          "description": "An unordered collection of graduationPlanCreditsByCourseCourses.  The course reference that identifies the organization of subject matter and related learning experiences provided for the instruction of students.",
          "items": {
            "$ref": "graduationPlanCreditsByCourseCourse"
          }
        }
      }
    },
    "graduationPlanCreditsBySubject": {
      "id": "graduationPlanCreditsBySubject",
      "properties": {
        "academicSubjectDescriptor": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The intended major subject area of the graduation requirement."
        },
        "creditType": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The type of credits or units of value awarded for the completion of a course."
        },
        "credits": {
          "type": "number",
          "format": "double",
          "required": true,
          "description": "The value of credits or units of value awarded for the completion of a course."
        },
        "creditConversion": {
          "type": "number",
          "format": "double",
          "required": false,
          "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units."
        }
      }
    },
    "graduationPlanRequiredAssessment": {
      "id": "graduationPlanRequiredAssessment",
      "properties": {
        "assessmentReference": {
          "type": "assessmentReference",
          "required": true,
          "description": "A reference to the related Assessment resource."
        },
        "assessmentPerformanceLevel": {
          "type": "graduationPlanRequiredAssessmentAssessmentPerformanceLevel",
          "required": false,
          "description": "Performance level required to be met or exceeded."
        },
        "scores": {
          "type": "array",
          "required": false,
          "description": "An unordered collection of graduationPlanRequiredAssessmentScores.  Score required to be met or exceeded.",
          "items": {
            "$ref": "graduationPlanRequiredAssessmentScore"
          }
        }
      }
    },
    "graduationPlanCreditsByCourseCourse": {
      "id": "graduationPlanCreditsByCourseCourse",
      "properties": {
        "courseReference": {
          "type": "courseReference",
          "required": true,
          "description": "A reference to the related Course resource."
        }
      }
    },
    "graduationPlanRequiredAssessmentScore": {
      "id": "graduationPlanRequiredAssessmentScore",
      "properties": {
        "assessmentReportingMethodType": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used."
        },
        "resultDatatypeType": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The datatype of the result. The results can be expressed as a number, percentile, range, level, etc."
        },
        "minimumScore": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The minimum score possible on the assessment."
        },
        "maximumScore": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The maximum score possible on the assessment."
        }
      }
    },
    "graduationPlanRequiredAssessmentAssessmentPerformanceLevel": {
      "id": "graduationPlanRequiredAssessmentAssessmentPerformanceLevel",
      "properties": {
        "assessmentReportingMethodType": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used."
        },
        "performanceLevelDescriptor": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The performance level(s) defined for the assessment."
        },
        "resultDatatypeType": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The datatype of the result. The results can be expressed as a number, percentile,range, level, etc."
        },
        "minimumScore": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The minimum score required to make the indicated level of performance."
        },
        "maximumScore": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The maximum score to make the indicated level of performance."
        }
      }
    },
    "assessmentReference": {
      "id": "assessmentReference",
      "properties": {
        "identifier": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "A unique number or alphanumeric code assigned to an assessment."
        },
        "namespace": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "Namespace for the Assessment."
        },
        "link": {
          "type": "link",
          "required": false,
          "description": "Represents a hyperlink to the related assessment resource."
        }
      }
    },
    "courseReference": {
      "id": "courseReference",
      "properties": {
        "educationOrganizationId": {
          "type": "integer",
          "format": "int32",
          "required": true,
          "description": "The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID."
        },
        "code": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "A unique alphanumeric code assigned to a course."
        },
        "link": {
          "type": "link",
          "required": false,
          "description": "Represents a hyperlink to the related course resource."
        }
      }
    },
    "webServiceError": {
      "id": "webServiceError",
      "properties": {
        "message": {
          "type": "string",
          "required": false,
          "description": "The \"user-friendly\" error message."
        },
        "exceptionMessage": {
          "type": "string",
          "required": false,
          "description": "The system-generated exception message."
        },
        "exceptionType": {
          "type": "string",
          "required": false,
          "description": "The type of the exception."
        },
        "stackTrace": {
          "type": "string",
          "required": false,
          "description": "The server-side stack trace (only available in DEBUG builds)."
        }
      }
    },
    "link": {
      "id": "link",
      "properties": {
        "rel": {
          "type": "string",
          "required": false,
          "description": "Describes the nature of the relationship to the referenced resource."
        },
        "href": {
          "type": "string",
          "required": false,
          "description": "The URL to the related resource."
        }
      }
    }
  }
}
