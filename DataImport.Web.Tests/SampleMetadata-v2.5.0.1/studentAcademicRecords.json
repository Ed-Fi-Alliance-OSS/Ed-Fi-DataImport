
{
  "apiVersion": "2.0",
  "swaggerVersion": "1.2",
  "basePath": "http://test-ods-v2.5.0.1.example.com/api/v2.0/2019",
  "resourcePath": "/studentAcademicRecords",
  "produces": [
    "application/json"
  ],
  "apis": [
    {
      "path": "/studentAcademicRecords",
      "description": "This educational entity represents the cumulative record of academic achievement for a student.",
      "operations": [
        {
          "method": "GET",
          "nickname": "getStudentAcademicRecordsAll",
          "type": "array",
          "items": {
            "$ref": "studentAcademicRecord"
          },
          "parameters": [
            {
              "paramType": "query",
              "name": "offset",
              "description": "Indicates how many items should be skipped before returning results.",
              "type": "integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "limit",
              "description": "Indicates the maximum number of items that should be returned in the results (defaults to 25).",
              "type": "integer",
              "required": false,
              "minimum": 1,
              "maximum": 250
            }
          ],
          "produces": [
            "application/json"
          ],
          "summary": "Retrieves resources based with paging capabilities (using the \"Get All\" pattern).",
          "notes": "This GET operation provides access to resources using the \"Get All\" pattern. In this version of the API there is support for paging.",
          "responseMessages": [
            {
              "code": 200,
              "message": "The matching resource(s) were successfully retrieved.  If no instances are found will return an empty collection.",
              "responseModel": "array",
              "items": {
                "$ref": "studentAcademicRecord"
              }
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors.  This will typically be an issue with the query parameters or their values."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        },
        {
          "method": "GET",
          "nickname": "getStudentAcademicRecordsByExample",
          "type": "array",
          "items": {
            "$ref": "studentAcademicRecord"
          },
          "parameters": [
            {
              "paramType": "query",
              "name": "offset",
              "description": "Indicates how many items should be skipped before returning results.",
              "type": "integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "limit",
              "description": "Indicates the maximum number of items that should be returned in the results (defaults to 25).",
              "type": "integer",
              "required": false,
              "minimum": 1,
              "maximum": 250
            },
            {
              "paramType": "query",
              "name": "termDescriptor",
              "description": "The term for the session during the school year.",
              "type": "string",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "educationOrganizationId",
              "description": "The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.",
              "type": "integer",
              "format": "int32",
              "required": false
            },
            {
              "paramType": "query",
              "name": "schoolYear",
              "description": "The identifier for the school year.",
              "type": "integer",
              "format": "int32",
              "required": false
            },
            {
              "paramType": "query",
              "name": "studentUniqueId",
              "description": "A unique alphanumeric code assigned to a student.",
              "type": "string",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "cumulativeEarnedCreditType",
              "description": "The type of credits or units of value awarded for the completion of a course.",
              "type": "string",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "cumulativeAttemptedCreditType",
              "description": "The type of credits or units of value awarded for the completion of a course.",
              "type": "string",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "sessionEarnedCreditType",
              "description": "The type of credits or units of value awarded for the completion of a course.",
              "type": "string",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "sessionAttemptedCreditType",
              "description": "The type of credits or units of value awarded for the completion of a course.",
              "type": "string",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "cumulativeEarnedCredits",
              "description": "The value of credits or units of value awarded for the completion of a course.",
              "type": "number",
              "format": "double",
              "required": false
            },
            {
              "paramType": "query",
              "name": "cumulativeEarnedCreditConversion",
              "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
              "type": "number",
              "format": "double",
              "required": false
            },
            {
              "paramType": "query",
              "name": "cumulativeAttemptedCredits",
              "description": "The value of credits or units of value awarded for the completion of a course.",
              "type": "number",
              "format": "double",
              "required": false
            },
            {
              "paramType": "query",
              "name": "cumulativeAttemptedCreditConversion",
              "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
              "type": "number",
              "format": "double",
              "required": false
            },
            {
              "paramType": "query",
              "name": "cumulativeGradePointsEarned",
              "description": "The cumulative number of grade points an individual earns by successfully completing courses or examinations during his or her enrollment in the current school as well as those transferred from schools in which the individual had been previously enrolled.",
              "type": "number",
              "format": "double",
              "required": false
            },
            {
              "paramType": "query",
              "name": "cumulativeGradePointAverage",
              "description": "A measure of average performance in all courses taken by an individual during his or her school career as determined for record-keeping purposes. This is obtained by dividing the total grade points received by the total number of credits attempted. This usually includes grade points received and credits attempted in his or her current school as well as those transferred from schools in which the individual was previously enrolled.",
              "type": "number",
              "format": "double",
              "required": false
            },
            {
              "paramType": "query",
              "name": "gradeValueQualifier",
              "description": "The scale of equivalents, if applicable, for grades awarded as indicators of performance in schoolwork. For example, numerical equivalents for letter grades used in determining a student's Grade Point Average (A=4, B=3, C=2, D=1 in a four-point system) or letter equivalents for percentage grades (90-100%=A, 80-90%=B, etc.)",
              "type": "string",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "projectedGraduationDate",
              "description": "The month and year the student is projected to graduate.",
              "type": "string",
              "format": "date",
              "required": false
            },
            {
              "paramType": "query",
              "name": "sessionEarnedCredits",
              "description": "The value of credits or units of value awarded for the completion of a course.",
              "type": "number",
              "format": "double",
              "required": false
            },
            {
              "paramType": "query",
              "name": "sessionEarnedCreditConversion",
              "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
              "type": "number",
              "format": "double",
              "required": false
            },
            {
              "paramType": "query",
              "name": "sessionAttemptedCredits",
              "description": "The value of credits or units of value awarded for the completion of a course.",
              "type": "number",
              "format": "double",
              "required": false
            },
            {
              "paramType": "query",
              "name": "sessionAttemptedCreditConversion",
              "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.",
              "type": "number",
              "format": "double",
              "required": false
            },
            {
              "paramType": "query",
              "name": "sessionGradePointsEarned",
              "description": "The number of grade points an individual earned for this session.",
              "type": "number",
              "format": "double",
              "required": false
            },
            {
              "paramType": "query",
              "name": "sessionGradePointAverage",
              "description": "The grade point average for an individual computed as the grade points earned during the session divided by the number of credits attempted.",
              "type": "number",
              "format": "double",
              "required": false
            },
            {
              "paramType": "query",
              "name": "id",
              "description": "",
              "type": "string",
              "format": "string",
              "required": false
            }
          ],
          "produces": [
            "application/json"
          ],
          "summary": "Retrieves resources matching values of an example resource (using the \"Get By Example\" pattern).",
          "notes": "This GET operation provides access to resources using the \"Get by Example\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
          "responseMessages": [
            {
              "code": 200,
              "message": "The resource(s) were successfully retrieved.  If no instances are found will return an empty collection.",
              "responseModel": "array",
              "items": {
                "$ref": "studentAcademicRecord"
              }
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors.  This will typically be an issue with the query parameters or their values."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        },
        {
          "method": "GET",
          "nickname": "getStudentAcademicRecordByKey",
          "type": "studentAcademicRecord",
          "parameters": [
            {
              "paramType": "query",
              "name": "educationOrganizationId",
              "description": "The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.",
              "type": "integer",
              "format": "int32",
              "required": true
            },
            {
              "paramType": "query",
              "name": "schoolYear",
              "description": "The identifier for the school year.",
              "type": "integer",
              "format": "int32",
              "required": true
            },
            {
              "paramType": "query",
              "name": "studentUniqueId",
              "description": "A unique alphanumeric code assigned to a student.",
              "type": "string",
              "format": "",
              "required": true
            },
            {
              "paramType": "query",
              "name": "termDescriptor",
              "description": "The term for the session during the school year.",
              "type": "string",
              "format": "",
              "required": true
            },
            {
              "paramType": "header",
              "name": "If-None-Match",
              "description": "The previously returned ETag header value, used here to prevent the unnecessary data transfer of an unchanged resource.",
              "type": "string",
              "required": false
            }
          ],
          "produces": [
            "application/json"
          ],
          "summary": "Retrieves a specific resource using the values of the resource's natural key (using the \"Get By Key\" pattern).",
          "notes": "This GET operation provides access to resources using the \"Get by Key\" search pattern. The values of the natural key of the resource must be fully specified, and the service will return the matching result (if it exists).",
          "responseMessages": [
            {
              "code": 200,
              "message": "The resource was successfully retrieved.",
              "responseModel": "studentAcademicRecord"
            },
            {
              "code": 304,
              "message": "The resource's current server-side ETag value matched the If-None-Match header value supplied with the request indicating the resource has not been modified."
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 404,
              "message": "The resource could not be found."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        },
        {
          "method": "POST",
          "nickname": "postStudentAcademicRecords",
          "type": "void",
          "parameters": [
            {
              "paramType": "body",
              "name": "studentAcademicRecord",
              "description": "The JSON representation of the \"studentAcademicRecord\" resource to be created or updated.",
              "type": "studentAcademicRecord",
              "required": true
            }
          ],
          "consumes": [
            "application/json"
          ],
          "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
          "notes": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update).  Clients should NOT include the resource \"id\" in the JSON body because it will result in an error (you must use a PUT operation to update a resource by \"id\"). The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately.",
          "responseMessages": [
            {
              "code": 201,
              "message": "The resource was created.  An ETag value is available in the ETag header, and the location of the resource is available in the Location header of the response."
            },
            {
              "code": 202,
              "message": "The resource has been validated and accepted by the service, but processing has not yet completed due to current system load. Processing may still fail due to violation of referential integrity requirements."
            },
            {
              "code": 204,
              "message": "The resource was updated.  An updated ETag value is available in the ETag header of the response."
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 409,
              "message": "Conflict.  The request cannot be completed because it would result in an invalid state.  See the response body for details."
            },
            {
              "code": 412,
              "message": "The resource's current server-side ETag value does not match the supplied If-Match header value in the request.  This indicates the resource has been modified by another consumer."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        }
      ]
    },
    {
      "path": "/studentAcademicRecords/{id}",
      "description": "This educational entity represents the cumulative record of academic achievement for a student.",
      "operations": [
        {
          "method": "GET",
          "nickname": "getStudentAcademicRecordsById",
          "type": "studentAcademicRecord",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "A resource identifier specifying the resource to be retrieved.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "header",
              "name": "If-None-Match",
              "description": "The previously returned ETag header value, used here to prevent the unnecessary data transfer of an unchanged resource.",
              "type": "string",
              "required": false
            }
          ],
          "produces": [
            "application/json"
          ],
          "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
          "notes": "This GET operation retrieves a resource by the specified resource identifier.",
          "responseMessages": [
            {
              "code": 200,
              "message": "The resource was successfully retrieved.",
              "responseModel": "studentAcademicRecord"
            },
            {
              "code": 304,
              "message": "The resource's current server-side ETag value matched the If-None-Match header value supplied with the request indicating the resource has not been modified."
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 404,
              "message": "The resource could not be found."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        },
        {
          "method": "PUT",
          "nickname": "putStudentAcademicRecord",
          "type": "void",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "A resource identifier specifying the resource to be updated.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "header",
              "name": "If-Match",
              "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
              "type": "string",
              "required": false
            },
            {
              "paramType": "body",
              "name": "studentAcademicRecord",
              "description": "The JSON representation of the \"studentAcademicRecord\" resource to be updated.",
              "type": "studentAcademicRecord",
              "required": true
            }
          ],
          "consumes": [
            "application/json"
          ],
          "summary": "Updates or creates a resource based on the resource identifier.",
          "notes": "The PUT operation is used to update or create a resource by identifier.  If the resource doesn't exist, the resource will be created using that identifier.  Additionally, natural key values cannot be changed using this operation, and will not be modified in the database.  If the resource \"id\" is provided in the JSON body, it will be ignored as well.",
          "responseMessages": [
            {
              "code": 201,
              "message": "The resource was created.  An ETag value is available in the ETag header, and the location of the resource is available in the Location header of the response."
            },
            {
              "code": 202,
              "message": "The resource has been validated and accepted by the service, but processing has not yet completed due to current system load. Processing may still fail due to violation of referential integrity requirements."
            },
            {
              "code": 204,
              "message": "The resource was updated.  An updated ETag value is available in the ETag header of the response."
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 404,
              "message": "The resource could not be found."
            },
            {
              "code": 409,
              "message": "Conflict.  The request cannot be completed because it would result in an invalid state.  See the response body for details."
            },
            {
              "code": 412,
              "message": "The resource's current server-side ETag value does not match the supplied If-Match header value in the request.  This indicates the resource has been modified by another consumer."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        },
        {
          "method": "DELETE",
          "nickname": "deleteStudentAcademicRecordById",
          "type": "void",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "A resource identifier specifying the resource to be deleted.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "header",
              "name": "If-Match",
              "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
              "type": "string",
              "required": false,
              "allowMultiple": false
            }
          ],
          "summary": "Deletes an existing resource using the resource identifier.",
          "notes": "The DELETE operation is used to delete an existing resource by identifier.  If the resource doesn't exist, an error will result (the resource will not be found).",
          "responseMessages": [
            {
              "code": 202,
              "message": "The request has accepted by the service, but processing has not yet completed due to current system load. Processing may still fail due to violation of referential integrity requirements."
            },
            {
              "code": 204,
              "message": "The resource was successfully deleted."
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 404,
              "message": "The resource could not be found."
            },
            {
              "code": 409,
              "message": "Conflict.  The request cannot be completed because it would result in an invalid state.  See the response body for details."
            },
            {
              "code": 412,
              "message": "The resource's current server-side ETag value does not match the supplied If-Match header value in the request.  This indicates the resource has been modified by another consumer."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        }
      ]
    }
  ],
  "models": {
    "studentAcademicRecord": {
      "id": "studentAcademicRecord",
      "properties": {
        "id": {
          "type": "string",
          "required": true,
          "description": "The unique identifier of the resource."
        },
        "educationOrganizationReference": {
          "type": "educationOrganizationReference",
          "required": true,
          "description": "A reference to the related EducationOrganization resource."
        },
        "schoolYearTypeReference": {
          "type": "schoolYearTypeReference",
          "required": true,
          "description": "A reference to the related SchoolYearType resource."
        },
        "studentReference": {
          "type": "studentReference",
          "required": true,
          "description": "A reference to the related Student resource."
        },
        "cumulativeAttemptedCreditConversion": {
          "type": "number",
          "format": "double",
          "required": false,
          "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units."
        },
        "cumulativeAttemptedCredits": {
          "type": "number",
          "format": "double",
          "required": false,
          "description": "The value of credits or units of value awarded for the completion of a course."
        },
        "cumulativeAttemptedCreditType": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The type of credits or units of value awarded for the completion of a course."
        },
        "cumulativeEarnedCreditConversion": {
          "type": "number",
          "format": "double",
          "required": false,
          "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units."
        },
        "cumulativeEarnedCredits": {
          "type": "number",
          "format": "double",
          "required": false,
          "description": "The value of credits or units of value awarded for the completion of a course."
        },
        "cumulativeEarnedCreditType": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The type of credits or units of value awarded for the completion of a course."
        },
        "cumulativeGradePointAverage": {
          "type": "number",
          "format": "double",
          "required": false,
          "description": "A measure of average performance in all courses taken by an individual during his or her school career as determined for record-keeping purposes. This is obtained by dividing the total grade points received by the total number of credits attempted. This usually includes grade points received and credits attempted in his or her current school as well as those transferred from schools in which the individual was previously enrolled."
        },
        "cumulativeGradePointsEarned": {
          "type": "number",
          "format": "double",
          "required": false,
          "description": "The cumulative number of grade points an individual earns by successfully completing courses or examinations during his or her enrollment in the current school as well as those transferred from schools in which the individual had been previously enrolled."
        },
        "gradeValueQualifier": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The scale of equivalents, if applicable, for grades awarded as indicators of performance in schoolwork. For example, numerical equivalents for letter grades used in determining a student's Grade Point Average (A=4, B=3, C=2, D=1 in a four-point system) or letter equivalents for percentage grades (90-100%=A, 80-90%=B, etc.)"
        },
        "projectedGraduationDate": {
          "type": "string",
          "format": "date",
          "required": false,
          "description": "The month and year the student is projected to graduate."
        },
        "sessionAttemptedCreditConversion": {
          "type": "number",
          "format": "double",
          "required": false,
          "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units."
        },
        "sessionAttemptedCredits": {
          "type": "number",
          "format": "double",
          "required": false,
          "description": "The value of credits or units of value awarded for the completion of a course."
        },
        "sessionAttemptedCreditType": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The type of credits or units of value awarded for the completion of a course."
        },
        "sessionEarnedCreditConversion": {
          "type": "number",
          "format": "double",
          "required": false,
          "description": "Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units."
        },
        "sessionEarnedCredits": {
          "type": "number",
          "format": "double",
          "required": false,
          "description": "The value of credits or units of value awarded for the completion of a course."
        },
        "sessionEarnedCreditType": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The type of credits or units of value awarded for the completion of a course."
        },
        "sessionGradePointAverage": {
          "type": "number",
          "format": "double",
          "required": false,
          "description": "The grade point average for an individual computed as the grade points earned during the session divided by the number of credits attempted."
        },
        "sessionGradePointsEarned": {
          "type": "number",
          "format": "double",
          "required": false,
          "description": "The number of grade points an individual earned for this session."
        },
        "termDescriptor": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The term for the session during the school year."
        },
        "classRanking": {
          "type": "studentAcademicRecordClassRanking",
          "required": false,
          "description": "The academic rank information of a student in relation to his or her graduating class."
        },
        "academicHonors": {
          "type": "array",
          "required": false,
          "description": "An unordered collection of studentAcademicRecordAcademicHonors.  Academic distinctions earned by or awarded to the student.",
          "items": {
            "$ref": "studentAcademicRecordAcademicHonor"
          }
        },
        "diplomas": {
          "type": "array",
          "required": false,
          "description": "An unordered collection of studentAcademicRecordDiplomas.  Diploma(s) earned by the student.",
          "items": {
            "$ref": "studentAcademicRecordDiploma"
          }
        },
        "recognitions": {
          "type": "array",
          "required": false,
          "description": "An unordered collection of studentAcademicRecordRecognitions.  Recognitions given to the student for accomplishments in a co-curricular or extracurricular activity.",
          "items": {
            "$ref": "studentAcademicRecordRecognition"
          }
        },
        "reportCards": {
          "type": "array",
          "required": false,
          "description": "An unordered collection of studentAcademicRecordReportCards.  Report cards for the student.",
          "items": {
            "$ref": "studentAcademicRecordReportCard"
          }
        },
        "_etag": {
          "type": "string",
          "required": false,
          "description": "A unique system-generated value that identifies the version of the resource."
        }
      }
    },
    "educationOrganizationReference": {
      "id": "educationOrganizationReference",
      "properties": {
        "educationOrganizationId": {
          "type": "integer",
          "format": "int32",
          "required": true,
          "description": "The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID."
        },
        "link": {
          "type": "link",
          "required": false,
          "description": "Represents a hyperlink to the related educationOrganization resource."
        }
      }
    },
    "schoolYearTypeReference": {
      "id": "schoolYearTypeReference",
      "properties": {
        "schoolYear": {
          "type": "integer",
          "format": "int32",
          "required": true,
          "description": "Key for School Year"
        },
        "link": {
          "type": "link",
          "required": false,
          "description": "Represents a hyperlink to the related schoolYearType resource."
        }
      }
    },
    "studentReference": {
      "id": "studentReference",
      "properties": {
        "studentUniqueId": {
          "type": "string",
          "format": "int32",
          "required": true,
          "description": "A unique alphanumeric code assigned to a student."
        },
        "link": {
          "type": "link",
          "required": false,
          "description": "Represents a hyperlink to the related student resource."
        }
      }
    },
    "studentAcademicRecordAcademicHonor": {
      "id": "studentAcademicRecordAcademicHonor",
      "properties": {
        "academicHonorCategoryType": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "A designation of the type of academic distinctions earned by or awarded to the student."
        },
        "achievementCategoryDescriptor": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The category of achievement attributed to the learner."
        },
        "achievementTitle": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The title assigned to the achievement."
        },
        "achievementCategorySystem": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The system that defines the categories by which an achievement is attributed to the learner."
        },
        "issuerName": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The name of the agent, entity, or institution issuing the element."
        },
        "issuerOriginURL": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The Uniform Resource Locator (URL) from which the award was issued."
        },
        "criteria": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The criteria for competency-based completion of the achievement/award."
        },
        "criteriaURL": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award."
        },
        "evidenceStatement": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "A statement or reference describing the evidence that the learner met the criteria for attainment of the Achievement."
        },
        "imageURL": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the Achievement."
        },
        "honorDescription": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "A description of the type of academic distinctions earned by or awarded to the individual."
        },
        "honorAwardDate": {
          "type": "string",
          "format": "date",
          "required": false,
          "description": "The date the honor was awarded or earned."
        },
        "honorAwardExpiresDate": {
          "type": "string",
          "format": "date",
          "required": false,
          "description": "Date on which the award expires."
        }
      }
    },
    "studentAcademicRecordDiploma": {
      "id": "studentAcademicRecordDiploma",
      "properties": {
        "diplomaType": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements."
        },
        "diplomaAwardDate": {
          "type": "string",
          "format": "date",
          "required": true,
          "description": "The month, day, and year on which the student met  graduation requirements and was awarded a diploma."
        },
        "achievementCategoryDescriptor": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The category of achievement attributed to the learner."
        },
        "diplomaLevelType": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The level of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.          Minimum high school program          Recommended high school program          Distinguished Achievement Program."
        },
        "achievementTitle": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The title assigned to the achievement."
        },
        "achievementCategorySystem": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The system that defines the categories by which an achievement is attributed to the learner."
        },
        "issuerName": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The name of the agent, entity, or institution issuing the element."
        },
        "issuerOriginURL": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The Uniform Resource Locator (URL) from which the award was issued."
        },
        "criteria": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The criteria for competency-based completion of the achievement/award."
        },
        "criteriaURL": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award."
        },
        "evidenceStatement": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "A statement or reference describing the evidence that the learner met the criteria for attainment of the Achievement."
        },
        "imageURL": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the Achievement."
        },
        "cteCompleter": {
          "type": "boolean",
          "format": "",
          "required": false,
          "description": "Indicated a student who reached a state-defined threshold of vocational education and who attained a high school diploma or its recognized state equivalent or GED."
        },
        "diplomaDescription": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The description of diploma given to the student for accomplishments."
        },
        "diplomaAwardExpiresDate": {
          "type": "string",
          "format": "date",
          "required": false,
          "description": "Date on which the award expires."
        }
      }
    },
    "studentAcademicRecordRecognition": {
      "id": "studentAcademicRecordRecognition",
      "properties": {
        "recognitionType": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The nature of recognition given to the student for accomplishments in a co-curricular, or extra-curricular activity."
        },
        "achievementCategoryDescriptor": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The category of achievement attributed to the learner."
        },
        "achievementTitle": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The title assigned to the achievement."
        },
        "achievementCategorySystem": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The system that defines the categories by which an achievement is attributed to the learner."
        },
        "issuerName": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The name of the agent, entity, or institution issuing the element."
        },
        "issuerOriginURL": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The Uniform Resource Locator (URL) from which the award was issued."
        },
        "criteria": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The criteria for competency-based completion of the achievement/award."
        },
        "criteriaURL": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award."
        },
        "evidenceStatement": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "A statement or reference describing the evidence that the learner met the criteria for attainment of the Achievement."
        },
        "imageURL": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the Achievement."
        },
        "recognitionDescription": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "A description of the type of academic distinctions earned by or awarded to the individual."
        },
        "recognitionAwardDate": {
          "type": "string",
          "format": "date",
          "required": false,
          "description": "The date the recognition was awarded or earned."
        },
        "recognitionAwardExpiresDate": {
          "type": "string",
          "format": "date",
          "required": false,
          "description": "Date on which the award expires."
        }
      }
    },
    "studentAcademicRecordReportCard": {
      "id": "studentAcademicRecordReportCard",
      "properties": {
        "reportCardReference": {
          "type": "reportCardReference",
          "required": true,
          "description": "A reference to the related ReportCard resource."
        }
      }
    },
    "studentAcademicRecordClassRanking": {
      "id": "studentAcademicRecordClassRanking",
      "properties": {
        "classRank": {
          "type": "integer",
          "format": "int32",
          "required": true,
          "description": "The academic rank of a student in relation to his or her graduating class (e.g., 1st, 2nd, 3rd)."
        },
        "totalNumberInClass": {
          "type": "integer",
          "format": "int32",
          "required": true,
          "description": "The total number of students in the student's graduating class."
        },
        "percentageRanking": {
          "type": "integer",
          "format": "int32",
          "required": false,
          "description": "The academic percentage rank of a student in relation to his or her graduating class (e.g., 95%, 80%, 50%)."
        },
        "classRankingDate": {
          "type": "string",
          "format": "date",
          "required": false,
          "description": "Date class ranking was determined."
        }
      }
    },
    "reportCardReference": {
      "id": "reportCardReference",
      "properties": {
        "studentUniqueId": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "A unique alphanumeric code assigned to a student."
        },
        "educationOrganizationId": {
          "type": "integer",
          "format": "int32",
          "required": true,
          "description": "The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID."
        },
        "gradingPeriodDescriptor": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The name of the period for which grades are reported."
        },
        "gradingPeriodBeginDate": {
          "type": "string",
          "format": "date",
          "required": true,
          "description": "Month, day, and year of the first day of the GradingPeriod."
        },
        "schoolId": {
          "type": "integer",
          "format": "int32",
          "required": true,
          "description": "The identifier assigned to a school by the State Education Agency (SEA)."
        },
        "link": {
          "type": "link",
          "required": false,
          "description": "Represents a hyperlink to the related reportCard resource."
        }
      }
    },
    "webServiceError": {
      "id": "webServiceError",
      "properties": {
        "message": {
          "type": "string",
          "required": false,
          "description": "The \"user-friendly\" error message."
        },
        "exceptionMessage": {
          "type": "string",
          "required": false,
          "description": "The system-generated exception message."
        },
        "exceptionType": {
          "type": "string",
          "required": false,
          "description": "The type of the exception."
        },
        "stackTrace": {
          "type": "string",
          "required": false,
          "description": "The server-side stack trace (only available in DEBUG builds)."
        }
      }
    },
    "link": {
      "id": "link",
      "properties": {
        "rel": {
          "type": "string",
          "required": false,
          "description": "Describes the nature of the relationship to the referenced resource."
        },
        "href": {
          "type": "string",
          "required": false,
          "description": "The URL to the related resource."
        }
      }
    }
  }
}
