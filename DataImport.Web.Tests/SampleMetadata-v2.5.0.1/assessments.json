
{
  "apiVersion": "2.0",
  "swaggerVersion": "1.2",
  "basePath": "http://test-ods-v2.5.0.1.example.com/api/v2.0/2019",
  "resourcePath": "/assessments",
  "produces": [
    "application/json"
  ],
  "apis": [
    {
      "path": "/assessments",
      "description": "This entity represents a tool, instrument, process, or exhibition composed of a systematic sampling of behavior for measuring a student's competence, knowledge,skills, or behavior. An assessment can be used to measure differences inindividuals or groups and changes in performance from one occasion to the next.",
      "operations": [
        {
          "method": "GET",
          "nickname": "getAssessmentsAll",
          "type": "array",
          "items": {
            "$ref": "assessment"
          },
          "parameters": [
            {
              "paramType": "query",
              "name": "offset",
              "description": "Indicates how many items should be skipped before returning results.",
              "type": "integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "limit",
              "description": "Indicates the maximum number of items that should be returned in the results (defaults to 25).",
              "type": "integer",
              "required": false,
              "minimum": 1,
              "maximum": 250
            }
          ],
          "produces": [
            "application/json"
          ],
          "summary": "Retrieves resources based with paging capabilities (using the \"Get All\" pattern).",
          "notes": "This GET operation provides access to resources using the \"Get All\" pattern. In this version of the API there is support for paging.",
          "responseMessages": [
            {
              "code": 200,
              "message": "The matching resource(s) were successfully retrieved.  If no instances are found will return an empty collection.",
              "responseModel": "array",
              "items": {
                "$ref": "assessment"
              }
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors.  This will typically be an issue with the query parameters or their values."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        },
        {
          "method": "GET",
          "nickname": "getAssessmentsByExample",
          "type": "array",
          "items": {
            "$ref": "assessment"
          },
          "parameters": [
            {
              "paramType": "query",
              "name": "offset",
              "description": "Indicates how many items should be skipped before returning results.",
              "type": "integer",
              "required": false
            },
            {
              "paramType": "query",
              "name": "limit",
              "description": "Indicates the maximum number of items that should be returned in the results (defaults to 25).",
              "type": "integer",
              "required": false,
              "minimum": 1,
              "maximum": 250
            },
            {
              "paramType": "query",
              "name": "identifier",
              "description": "A unique number or alphanumeric code assigned to an assessment.",
              "type": "string",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "namespace",
              "description": "Namespace for the Assessment.",
              "type": "string",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "familyTitle",
              "description": "The title or name of the AssessmentFamily.",
              "type": "string",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "educationOrganizationId",
              "description": "The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.",
              "type": "integer",
              "format": "int32",
              "required": false
            },
            {
              "paramType": "query",
              "name": "categoryDescriptor",
              "description": "The category of an assessment based on format and content. For example:          Achievement test          Advanced placement test          Alternate assessment/grade-level standards          Attitudinal test          Cognitive and perceptual skills test          ...",
              "type": "string",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "periodDescriptor",
              "description": "The period or window in which an assessment is supposed to be administered.",
              "type": "string",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "title",
              "description": "The title or name of the Assessment.",
              "type": "string",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "form",
              "description": "Identifies the form of the assessment, for example a regular versus makeup form, multiple choice versus constructed response, etc.",
              "type": "string",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "version",
              "description": "The version identifier for the assessment.",
              "type": "integer",
              "format": "int32",
              "required": false
            },
            {
              "paramType": "query",
              "name": "revisionDate",
              "description": "The month, day, and year that the conceptual design for the assessment was most recently revised substantially.",
              "type": "string",
              "format": "date",
              "required": false
            },
            {
              "paramType": "query",
              "name": "maxRawScore",
              "description": "The maximum raw score achievable across all assessment items that are correct and scored at the maximum.",
              "type": "integer",
              "format": "int32",
              "required": false
            },
            {
              "paramType": "query",
              "name": "nomenclature",
              "description": "Reflects the specific nomenclature used for Assessment.",
              "type": "string",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "adaptiveAssessment",
              "description": "Indicates that the assessment is adaptive.",
              "type": "boolean",
              "format": "",
              "required": false
            },
            {
              "paramType": "query",
              "name": "id",
              "description": "",
              "type": "string",
              "format": "string",
              "required": false
            }
          ],
          "produces": [
            "application/json"
          ],
          "summary": "Retrieves resources matching values of an example resource (using the \"Get By Example\" pattern).",
          "notes": "This GET operation provides access to resources using the \"Get by Example\" search pattern.  The values of any properties of the resource that are specified will be used to return all matching results (if it exists).",
          "responseMessages": [
            {
              "code": 200,
              "message": "The resource(s) were successfully retrieved.  If no instances are found will return an empty collection.",
              "responseModel": "array",
              "items": {
                "$ref": "assessment"
              }
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors.  This will typically be an issue with the query parameters or their values."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        },
        {
          "method": "GET",
          "nickname": "getAssessmentByKey",
          "type": "assessment",
          "parameters": [
            {
              "paramType": "query",
              "name": "identifier",
              "description": "A unique number or alphanumeric code assigned to an assessment.",
              "type": "string",
              "format": "",
              "required": true
            },
            {
              "paramType": "query",
              "name": "namespace",
              "description": "Namespace for the Assessment.",
              "type": "string",
              "format": "",
              "required": true
            },
            {
              "paramType": "header",
              "name": "If-None-Match",
              "description": "The previously returned ETag header value, used here to prevent the unnecessary data transfer of an unchanged resource.",
              "type": "string",
              "required": false
            }
          ],
          "produces": [
            "application/json"
          ],
          "summary": "Retrieves a specific resource using the values of the resource's natural key (using the \"Get By Key\" pattern).",
          "notes": "This GET operation provides access to resources using the \"Get by Key\" search pattern. The values of the natural key of the resource must be fully specified, and the service will return the matching result (if it exists).",
          "responseMessages": [
            {
              "code": 200,
              "message": "The resource was successfully retrieved.",
              "responseModel": "assessment"
            },
            {
              "code": 304,
              "message": "The resource's current server-side ETag value matched the If-None-Match header value supplied with the request indicating the resource has not been modified."
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 404,
              "message": "The resource could not be found."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        },
        {
          "method": "POST",
          "nickname": "postAssessments",
          "type": "void",
          "parameters": [
            {
              "paramType": "body",
              "name": "assessment",
              "description": "The JSON representation of the \"assessment\" resource to be created or updated.",
              "type": "assessment",
              "required": true
            }
          ],
          "consumes": [
            "application/json"
          ],
          "summary": "Creates or updates resources based on the natural key values of the supplied resource.",
          "notes": "The POST operation can be used to create or update resources. In database terms, this is often referred to as an \"upsert\" operation (insert + update).  Clients should NOT include the resource \"id\" in the JSON body because it will result in an error (you must use a PUT operation to update a resource by \"id\"). The web service will identify whether the resource already exists based on the natural key values provided, and update or create the resource appropriately.",
          "responseMessages": [
            {
              "code": 201,
              "message": "The resource was created.  An ETag value is available in the ETag header, and the location of the resource is available in the Location header of the response."
            },
            {
              "code": 202,
              "message": "The resource has been validated and accepted by the service, but processing has not yet completed due to current system load. Processing may still fail due to violation of referential integrity requirements."
            },
            {
              "code": 204,
              "message": "The resource was updated.  An updated ETag value is available in the ETag header of the response."
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 409,
              "message": "Conflict.  The request cannot be completed because it would result in an invalid state.  See the response body for details."
            },
            {
              "code": 412,
              "message": "The resource's current server-side ETag value does not match the supplied If-Match header value in the request.  This indicates the resource has been modified by another consumer."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        }
      ]
    },
    {
      "path": "/assessments/{id}",
      "description": "This entity represents a tool, instrument, process, or exhibition composed of a systematic sampling of behavior for measuring a student's competence, knowledge,skills, or behavior. An assessment can be used to measure differences inindividuals or groups and changes in performance from one occasion to the next.",
      "operations": [
        {
          "method": "GET",
          "nickname": "getAssessmentsById",
          "type": "assessment",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "A resource identifier specifying the resource to be retrieved.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "header",
              "name": "If-None-Match",
              "description": "The previously returned ETag header value, used here to prevent the unnecessary data transfer of an unchanged resource.",
              "type": "string",
              "required": false
            }
          ],
          "produces": [
            "application/json"
          ],
          "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
          "notes": "This GET operation retrieves a resource by the specified resource identifier.",
          "responseMessages": [
            {
              "code": 200,
              "message": "The resource was successfully retrieved.",
              "responseModel": "assessment"
            },
            {
              "code": 304,
              "message": "The resource's current server-side ETag value matched the If-None-Match header value supplied with the request indicating the resource has not been modified."
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 404,
              "message": "The resource could not be found."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        },
        {
          "method": "PUT",
          "nickname": "putAssessment",
          "type": "void",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "A resource identifier specifying the resource to be updated.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "header",
              "name": "If-Match",
              "description": "The ETag header value used to prevent the PUT from updating a resource modified by another consumer.",
              "type": "string",
              "required": false
            },
            {
              "paramType": "body",
              "name": "assessment",
              "description": "The JSON representation of the \"assessment\" resource to be updated.",
              "type": "assessment",
              "required": true
            }
          ],
          "consumes": [
            "application/json"
          ],
          "summary": "Updates or creates a resource based on the resource identifier.",
          "notes": "The PUT operation is used to update or create a resource by identifier.  If the resource doesn't exist, the resource will be created using that identifier.  Additionally, natural key values cannot be changed using this operation, and will not be modified in the database.  If the resource \"id\" is provided in the JSON body, it will be ignored as well.",
          "responseMessages": [
            {
              "code": 201,
              "message": "The resource was created.  An ETag value is available in the ETag header, and the location of the resource is available in the Location header of the response."
            },
            {
              "code": 202,
              "message": "The resource has been validated and accepted by the service, but processing has not yet completed due to current system load. Processing may still fail due to violation of referential integrity requirements."
            },
            {
              "code": 204,
              "message": "The resource was updated.  An updated ETag value is available in the ETag header of the response."
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 404,
              "message": "The resource could not be found."
            },
            {
              "code": 409,
              "message": "Conflict.  The request cannot be completed because it would result in an invalid state.  See the response body for details."
            },
            {
              "code": 412,
              "message": "The resource's current server-side ETag value does not match the supplied If-Match header value in the request.  This indicates the resource has been modified by another consumer."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        },
        {
          "method": "DELETE",
          "nickname": "deleteAssessmentById",
          "type": "void",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "description": "A resource identifier specifying the resource to be deleted.",
              "type": "string",
              "required": true
            },
            {
              "paramType": "header",
              "name": "If-Match",
              "description": "The ETag header value used to prevent the DELETE from removing a resource modified by another consumer.",
              "type": "string",
              "required": false,
              "allowMultiple": false
            }
          ],
          "summary": "Deletes an existing resource using the resource identifier.",
          "notes": "The DELETE operation is used to delete an existing resource by identifier.  If the resource doesn't exist, an error will result (the resource will not be found).",
          "responseMessages": [
            {
              "code": 202,
              "message": "The request has accepted by the service, but processing has not yet completed due to current system load. Processing may still fail due to violation of referential integrity requirements."
            },
            {
              "code": 204,
              "message": "The resource was successfully deleted."
            },
            {
              "code": 400,
              "message": "Bad Request.  The request was invalid and cannot be completed.  See the response body for specific validation errors."
            },
            {
              "code": 401,
              "message": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
            },
            {
              "code": 403,
              "message": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
            },
            {
              "code": 404,
              "message": "The resource could not be found."
            },
            {
              "code": 409,
              "message": "Conflict.  The request cannot be completed because it would result in an invalid state.  See the response body for details."
            },
            {
              "code": 412,
              "message": "The resource's current server-side ETag value does not match the supplied If-Match header value in the request.  This indicates the resource has been modified by another consumer."
            },
            {
              "code": 500,
              "message": "An unhandled error occurred on the server. See the response body for details.",
              "responseModel": "webServiceError"
            }
          ]
        }
      ]
    }
  ],
  "models": {
    "assessment": {
      "id": "assessment",
      "properties": {
        "id": {
          "type": "string",
          "required": true,
          "description": "The unique identifier of the resource."
        },
        "assessmentFamilyReference": {
          "type": "assessmentFamilyReference",
          "required": false,
          "description": "A reference to the related AssessmentFamily resource."
        },
        "educationOrganizationReference": {
          "type": "educationOrganizationReference",
          "required": false,
          "description": "A reference to the related EducationOrganization resource."
        },
        "adaptiveAssessment": {
          "type": "boolean",
          "format": "",
          "required": false,
          "description": "Indicates that the assessment is adaptive."
        },
        "categoryDescriptor": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The category of an assessment based on format and content. For example:          Achievement test          Advanced placement test          Alternate assessment/grade-level standards          Attitudinal test          Cognitive and perceptual skills test          ..."
        },
        "form": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "Identifies the form of the assessment, for example a regular versus makeup form, multiple choice versus constructed response, etc."
        },
        "identifier": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "A unique number or alphanumeric code assigned to an assessment."
        },
        "periodDescriptor": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The period or window in which an assessment is supposed to be administered."
        },
        "title": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The title or name of the Assessment."
        },
        "maxRawScore": {
          "type": "integer",
          "format": "int32",
          "required": false,
          "description": "The maximum raw score achievable across all assessment items that are correct and scored at the maximum."
        },
        "namespace": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "Namespace for the Assessment."
        },
        "nomenclature": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "Reflects the specific nomenclature used for Assessment."
        },
        "revisionDate": {
          "type": "string",
          "format": "date",
          "required": false,
          "description": "The month, day, and year that the conceptual design for the assessment was most recently revised substantially."
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "required": false,
          "description": "The version identifier for the assessment."
        },
        "contentStandard": {
          "type": "assessmentContentStandard",
          "required": false,
          "description": "An indication as to whether an assessment conforms to a standard (e.g., local standard, statewide standard, regional standard, association standard)."
        },
        "academicSubjects": {
          "type": "array",
          "required": true,
          "description": "An unordered collection of assessmentAcademicSubjects.  The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.",
          "items": {
            "$ref": "assessmentAcademicSubject"
          }
        },
        "assessedGradeLevels": {
          "type": "array",
          "required": false,
          "description": "An unordered collection of assessmentAssessedGradeLevels.  The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level.",
          "items": {
            "$ref": "assessmentAssessedGradeLevel"
          }
        },
        "identificationCodes": {
          "type": "array",
          "required": false,
          "description": "An unordered collection of assessmentIdentificationCodes.  A unique number or alphanumeric code assigned to an assessment by a school, school system, a state, or other agency or entity.",
          "items": {
            "$ref": "assessmentIdentificationCode"
          }
        },
        "languages": {
          "type": "array",
          "required": false,
          "description": "An unordered collection of assessmentLanguages.  An indication of the languages in which the assessment is designed.",
          "items": {
            "$ref": "assessmentLanguage"
          }
        },
        "performanceLevels": {
          "type": "array",
          "required": false,
          "description": "An unordered collection of assessmentPerformanceLevels.  Definition of the performance levels and the associated cut scores. Three styles are supported:          1. Specification of performance level by minimum and maximum score          2. Specification of performance level by cut score, using only minimum score          3. Specification of performance level without any mapping to scores.",
          "items": {
            "$ref": "assessmentPerformanceLevel"
          }
        },
        "programs": {
          "type": "array",
          "required": false,
          "description": "An unordered collection of assessmentPrograms.  The programs associated with the Assessment.",
          "items": {
            "$ref": "assessmentProgram"
          }
        },
        "scores": {
          "type": "array",
          "required": false,
          "description": "An unordered collection of assessmentScores.  Definition of the scores to be expected from this assessment.",
          "items": {
            "$ref": "assessmentScore"
          }
        },
        "sections": {
          "type": "array",
          "required": false,
          "description": "An unordered collection of assessmentSections.  The Section(s) to which the Assessment is associated.",
          "items": {
            "$ref": "assessmentSection"
          }
        },
        "_etag": {
          "type": "string",
          "required": false,
          "description": "A unique system-generated value that identifies the version of the resource."
        }
      }
    },
    "assessmentFamilyReference": {
      "id": "assessmentFamilyReference",
      "properties": {
        "title": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The title or name of the AssessmentFamily."
        },
        "link": {
          "type": "link",
          "required": false,
          "description": "Represents a hyperlink to the related assessmentFamily resource."
        }
      }
    },
    "educationOrganizationReference": {
      "id": "educationOrganizationReference",
      "properties": {
        "educationOrganizationId": {
          "type": "integer",
          "format": "int32",
          "required": true,
          "description": "The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID."
        },
        "link": {
          "type": "link",
          "required": false,
          "description": "Represents a hyperlink to the related educationOrganization resource."
        }
      }
    },
    "assessmentAcademicSubject": {
      "id": "assessmentAcademicSubject",
      "properties": {
        "academicSubjectDescriptor": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment."
        }
      }
    },
    "assessmentAssessedGradeLevel": {
      "id": "assessmentAssessedGradeLevel",
      "properties": {
        "gradeLevelDescriptor": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level."
        }
      }
    },
    "assessmentIdentificationCode": {
      "id": "assessmentIdentificationCode",
      "properties": {
        "assessmentIdentificationSystemDescriptor": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to an assessment."
        },
        "identificationCode": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "A unique number or alphanumeric code assigned to an assessment by a school, school system, state, or other agency or entity."
        },
        "assigningOrganizationIdentificationCode": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The organization code or name assigning the assessment identification code."
        }
      }
    },
    "assessmentLanguage": {
      "id": "assessmentLanguage",
      "properties": {
        "languageDescriptor": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "An indication of the languages in which the assessment is designed."
        }
      }
    },
    "assessmentPerformanceLevel": {
      "id": "assessmentPerformanceLevel",
      "properties": {
        "assessmentReportingMethodType": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used."
        },
        "performanceLevelDescriptor": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The performance level(s) defined for the assessment."
        },
        "resultDatatypeType": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The datatype of the result. The results can be expressed as a number, percentile,range, level, etc."
        },
        "minimumScore": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The minimum score required to make the indicated level of performance."
        },
        "maximumScore": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The maximum score to make the indicated level of performance."
        }
      }
    },
    "assessmentProgram": {
      "id": "assessmentProgram",
      "properties": {
        "programReference": {
          "type": "programReference",
          "required": true,
          "description": "A reference to the related Program resource."
        }
      }
    },
    "assessmentScore": {
      "id": "assessmentScore",
      "properties": {
        "assessmentReportingMethodType": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used."
        },
        "resultDatatypeType": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The datatype of the result. The results can be expressed as a number, percentile, range, level, etc."
        },
        "minimumScore": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The minimum score possible on the assessment."
        },
        "maximumScore": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The maximum score possible on the assessment."
        }
      }
    },
    "assessmentSection": {
      "id": "assessmentSection",
      "properties": {
        "sectionReference": {
          "type": "sectionReference",
          "required": true,
          "description": "A reference to the related Section resource."
        }
      }
    },
    "assessmentContentStandard": {
      "id": "assessmentContentStandard",
      "properties": {
        "mandatingEducationOrganizationReference": {
          "type": "educationOrganizationReference",
          "required": false,
          "description": "A reference to the related EducationOrganization resource."
        },
        "publicationStatusType": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown)."
        },
        "title": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The name of the content standard, for example Common Core."
        },
        "version": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "The version identifier for the content."
        },
        "uri": {
          "type": "string",
          "format": "",
          "required": false,
          "description": "An unambiguous reference to the standards using a network-resolvable URI."
        },
        "publicationDate": {
          "type": "string",
          "format": "date",
          "required": false,
          "description": "The date on which this content was first published."
        },
        "publicationYear": {
          "type": "integer",
          "format": "int32",
          "required": false,
          "description": "The year at which this content was first published."
        },
        "beginDate": {
          "type": "string",
          "format": "date",
          "required": false,
          "description": "The beginning of the period during which this learning standard document is intended for use."
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "required": false,
          "description": "The end of the period during which this learning standard document is intended for use."
        },
        "authors": {
          "type": "array",
          "required": false,
          "description": "An unordered collection of assessmentContentStandardAuthors.  The person or organization chiefly responsible for the intellectual content of the standard.",
          "items": {
            "$ref": "assessmentContentStandardAuthor"
          }
        }
      }
    },
    "assessmentContentStandardAuthor": {
      "id": "assessmentContentStandardAuthor",
      "properties": {
        "author": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The person or organization chiefly responsible for the intellectual content of the standard."
        }
      }
    },
    "programReference": {
      "id": "programReference",
      "properties": {
        "educationOrganizationId": {
          "type": "integer",
          "format": "int32",
          "required": true,
          "description": "The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID."
        },
        "type": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The type of program."
        },
        "name": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies."
        },
        "link": {
          "type": "link",
          "required": false,
          "description": "Represents a hyperlink to the related program resource."
        }
      }
    },
    "sectionReference": {
      "id": "sectionReference",
      "properties": {
        "schoolId": {
          "type": "integer",
          "format": "int32",
          "required": true,
          "description": "The identifier assigned to a school by the State Education Agency (SEA)."
        },
        "classPeriodName": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules)."
        },
        "classroomIdentificationCode": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity."
        },
        "localCourseCode": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The local code assigned by the School that identifies the course offering provided for the instruction of students."
        },
        "termDescriptor": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "The term for the Session during the school year."
        },
        "schoolYear": {
          "type": "integer",
          "format": "int32",
          "required": true,
          "description": "The identifier for the school year."
        },
        "uniqueSectionCode": {
          "type": "string",
          "format": "",
          "required": true,
          "description": "A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned."
        },
        "sequenceOfCourse": {
          "type": "integer",
          "format": "int32",
          "required": true,
          "description": "When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1."
        },
        "link": {
          "type": "link",
          "required": false,
          "description": "Represents a hyperlink to the related section resource."
        }
      }
    },
    "webServiceError": {
      "id": "webServiceError",
      "properties": {
        "message": {
          "type": "string",
          "required": false,
          "description": "The \"user-friendly\" error message."
        },
        "exceptionMessage": {
          "type": "string",
          "required": false,
          "description": "The system-generated exception message."
        },
        "exceptionType": {
          "type": "string",
          "required": false,
          "description": "The type of the exception."
        },
        "stackTrace": {
          "type": "string",
          "required": false,
          "description": "The server-side stack trace (only available in DEBUG builds)."
        }
      }
    },
    "link": {
      "id": "link",
      "properties": {
        "rel": {
          "type": "string",
          "required": false,
          "description": "Describes the nature of the relationship to the referenced resource."
        },
        "href": {
          "type": "string",
          "required": false,
          "description": "The URL to the related resource."
        }
      }
    }
  }
}
